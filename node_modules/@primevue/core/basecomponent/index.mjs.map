{"version":3,"file":"index.mjs","sources":["../../src/basecomponent/style/BaseComponentStyle.js","../../src/basecomponent/BaseComponent.vue"],"sourcesContent":["import BaseStyle from '@primevue/core/base/style';\n\nexport default BaseStyle.extend({\n    name: 'common'\n});\n","<script>\nimport { Theme, ThemeService } from '@primeuix/styled';\nimport { findSingle, isElement } from '@primeuix/utils/dom';\nimport { getKeyValue, isArray, isFunction, isNotEmpty, isString, resolve, toFlatCase } from '@primeuix/utils/object';\nimport Base from '@primevue/core/base';\nimport BaseStyle from '@primevue/core/base/style';\nimport { useAttrSelector } from '@primevue/core/useattrselector';\nimport { mergeProps } from 'vue';\nimport BaseComponentStyle from './style/BaseComponentStyle';\n\nexport default {\n    name: 'BaseComponent',\n    props: {\n        pt: {\n            type: Object,\n            default: undefined\n        },\n        ptOptions: {\n            type: Object,\n            default: undefined\n        },\n        unstyled: {\n            type: Boolean,\n            default: undefined\n        },\n        dt: {\n            type: Object,\n            default: undefined\n        }\n    },\n    inject: {\n        $parentInstance: {\n            default: undefined\n        }\n    },\n    watch: {\n        isUnstyled: {\n            immediate: true,\n            handler(newValue) {\n                ThemeService.off('theme:change', this._loadCoreStyles);\n\n                if (!newValue) {\n                    this._loadCoreStyles();\n                    this._themeChangeListener(this._loadCoreStyles); // update styles with theme settings\n                }\n            }\n        },\n        dt: {\n            immediate: true,\n            handler(newValue, oldValue) {\n                ThemeService.off('theme:change', this._themeScopedListener);\n\n                if (newValue) {\n                    this._loadScopedThemeStyles(newValue);\n                    this._themeScopedListener = () => this._loadScopedThemeStyles(newValue);\n                    this._themeChangeListener(this._themeScopedListener);\n                } else {\n                    this._unloadScopedThemeStyles();\n                }\n            }\n        }\n    },\n    scopedStyleEl: undefined,\n    rootEl: undefined,\n    uid: undefined,\n    $attrSelector: undefined,\n    beforeCreate() {\n        const _usept = this.pt?.['_usept'];\n        const originalValue = _usept ? this.pt?.originalValue?.[this.$.type.name] : undefined;\n        const value = _usept ? this.pt?.value?.[this.$.type.name] : this.pt;\n\n        (value || originalValue)?.hooks?.['onBeforeCreate']?.();\n\n        const _useptInConfig = this.$primevueConfig?.pt?.['_usept'];\n        const originalValueInConfig = _useptInConfig ? this.$primevue?.config?.pt?.originalValue : undefined;\n        const valueInConfig = _useptInConfig ? this.$primevue?.config?.pt?.value : this.$primevue?.config?.pt;\n\n        (valueInConfig || originalValueInConfig)?.[this.$.type.name]?.hooks?.['onBeforeCreate']?.();\n\n        this.$attrSelector = useAttrSelector();\n        this.uid = this.$attrs.id || this.$attrSelector.replace('pc', 'pv_id_');\n    },\n    created() {\n        this._hook('onCreated');\n    },\n    beforeMount() {\n        // @deprecated - remove in v5\n        this.rootEl = findSingle(isElement(this.$el) ? this.$el : this.$el?.parentElement, `[${this.$attrSelector}]`);\n\n        if (this.rootEl) {\n            this.rootEl.$pc = { name: this.$.type.name, attrSelector: this.$attrSelector, ...this.$params };\n        }\n\n        this._loadStyles();\n        this._hook('onBeforeMount');\n    },\n    mounted() {\n        this._hook('onMounted');\n    },\n    beforeUpdate() {\n        this._hook('onBeforeUpdate');\n    },\n    updated() {\n        this._hook('onUpdated');\n    },\n    beforeUnmount() {\n        this._hook('onBeforeUnmount');\n    },\n    unmounted() {\n        this._removeThemeListeners();\n        this._unloadScopedThemeStyles();\n        this._hook('onUnmounted');\n    },\n    methods: {\n        _hook(hookName) {\n            if (!this.$options.hostName) {\n                const selfHook = this._usePT(this._getPT(this.pt, this.$.type.name), this._getOptionValue, `hooks.${hookName}`);\n                const defaultHook = this._useDefaultPT(this._getOptionValue, `hooks.${hookName}`);\n\n                selfHook?.();\n                defaultHook?.();\n            }\n        },\n        _mergeProps(fn, ...args) {\n            return isFunction(fn) ? fn(...args) : mergeProps(...args);\n        },\n        _load() {\n            // @todo\n            if (!Base.isStyleNameLoaded('base')) {\n                BaseStyle.loadCSS(this.$styleOptions);\n                this._loadGlobalStyles();\n\n                Base.setLoadedStyleName('base');\n            }\n\n            this._loadThemeStyles();\n        },\n        _loadStyles() {\n            this._load();\n            this._themeChangeListener(this._load);\n        },\n        _loadCoreStyles() {\n            if (!Base.isStyleNameLoaded(this.$style?.name) && this.$style?.name) {\n                BaseComponentStyle.loadCSS(this.$styleOptions);\n                this.$options.style && this.$style.loadCSS(this.$styleOptions);\n\n                Base.setLoadedStyleName(this.$style.name);\n            }\n        },\n        _loadGlobalStyles() {\n            /*\n             * @todo Add self custom css support;\n             * <Panel :pt=\"{ css: `...` }\" .../>\n             *\n             * const selfCSS = this._getPTClassValue(this.pt, 'css', this.$params);\n             * const defaultCSS = this._getPTClassValue(this.defaultPT, 'css', this.$params);\n             * const mergedCSS = mergeProps(selfCSS, defaultCSS);\n             * isNotEmpty(mergedCSS?.class) && this.$css.loadCustomStyle(mergedCSS?.class);\n             */\n\n            const globalCSS = this._useGlobalPT(this._getOptionValue, 'global.css', this.$params);\n\n            isNotEmpty(globalCSS) && BaseStyle.load(globalCSS, { name: 'global', ...this.$styleOptions });\n        },\n        _loadThemeStyles() {\n            if (this.isUnstyled || this.$theme === 'none') return;\n\n            // common\n            if (!Theme.isStyleNameLoaded('common')) {\n                const { primitive, semantic, global, style } = this.$style?.getCommonTheme?.() || {};\n\n                BaseStyle.load(primitive?.css, { name: 'primitive-variables', ...this.$styleOptions });\n                BaseStyle.load(semantic?.css, { name: 'semantic-variables', ...this.$styleOptions });\n                BaseStyle.load(global?.css, { name: 'global-variables', ...this.$styleOptions });\n                BaseStyle.loadStyle({ name: 'global-style', ...this.$styleOptions }, style);\n\n                Theme.setLoadedStyleName('common');\n            }\n\n            // component\n            if (!Theme.isStyleNameLoaded(this.$style?.name) && this.$style?.name) {\n                const { css, style } = this.$style?.getComponentTheme?.() || {};\n\n                this.$style?.load(css, { name: `${this.$style.name}-variables`, ...this.$styleOptions });\n                this.$style?.loadStyle({ name: `${this.$style.name}-style`, ...this.$styleOptions }, style);\n\n                Theme.setLoadedStyleName(this.$style.name);\n            }\n\n            // layer order\n            if (!Theme.isStyleNameLoaded('layer-order')) {\n                const layerOrder = this.$style?.getLayerOrderThemeCSS?.();\n\n                BaseStyle.load(layerOrder, { name: 'layer-order', first: true, ...this.$styleOptions });\n\n                Theme.setLoadedStyleName('layer-order');\n            }\n        },\n        _loadScopedThemeStyles(preset) {\n            const { css } = this.$style?.getPresetTheme?.(preset, `[${this.$attrSelector}]`) || {};\n            const scopedStyle = this.$style?.load(css, { name: `${this.$attrSelector}-${this.$style.name}`, ...this.$styleOptions });\n\n            this.scopedStyleEl = scopedStyle.el;\n        },\n        _unloadScopedThemeStyles() {\n            this.scopedStyleEl?.value?.remove();\n        },\n        _themeChangeListener(callback = () => {}) {\n            Base.clearLoadedStyleNames();\n            ThemeService.on('theme:change', callback);\n        },\n        _removeThemeListeners() {\n            ThemeService.off('theme:change', this._loadCoreStyles);\n            ThemeService.off('theme:change', this._load);\n            ThemeService.off('theme:change', this._themeScopedListener);\n        },\n        _getHostInstance(instance) {\n            return instance ? (this.$options.hostName ? (instance.$.type.name === this.$options.hostName ? instance : this._getHostInstance(instance.$parentInstance)) : instance.$parentInstance) : undefined;\n        },\n        _getPropValue(name) {\n            return this[name] || this._getHostInstance(this)?.[name];\n        },\n        _getOptionValue(options, key = '', params = {}) {\n            return getKeyValue(options, key, params);\n        },\n        _getPTValue(obj = {}, key = '', params = {}, searchInDefaultPT = true) {\n            const searchOut = /./g.test(key) && !!params[key.split('.')[0]];\n            const { mergeSections = true, mergeProps: useMergeProps = false } = this._getPropValue('ptOptions') || this.$primevueConfig?.ptOptions || {};\n            const global = searchInDefaultPT ? (searchOut ? this._useGlobalPT(this._getPTClassValue, key, params) : this._useDefaultPT(this._getPTClassValue, key, params)) : undefined;\n            const self = searchOut ? undefined : this._getPTSelf(obj, this._getPTClassValue, key, { ...params, global: global || {} });\n            const datasets = this._getPTDatasets(key);\n\n            return mergeSections || (!mergeSections && self) ? (useMergeProps ? this._mergeProps(useMergeProps, global, self, datasets) : { ...global, ...self, ...datasets }) : { ...self, ...datasets };\n        },\n        _getPTSelf(obj = {}, ...args) {\n            return mergeProps(\n                this._usePT(this._getPT(obj, this.$name), ...args), // Exp; <component :pt=\"{}\"\n                this._usePT(this.$_attrsPT, ...args) // Exp; <component :pt:[passthrough_key]:[attribute]=\"{value}\" or <component :pt:[passthrough_key]=\"() =>{value}\"\n            );\n        },\n        _getPTDatasets(key = '') {\n            const datasetPrefix = 'data-pc-';\n            const isExtended = key === 'root' && isNotEmpty(this.pt?.['data-pc-section']);\n\n            return (\n                key !== 'transition' && {\n                    ...(key === 'root' && {\n                        [`${datasetPrefix}name`]: toFlatCase(isExtended ? this.pt?.['data-pc-section'] : this.$.type.name),\n                        ...(isExtended && { [`${datasetPrefix}extend`]: toFlatCase(this.$.type.name) }),\n                        [`${this.$attrSelector}`]: ''\n                    }),\n                    [`${datasetPrefix}section`]: toFlatCase(key)\n                }\n            );\n        },\n        _getPTClassValue(...args) {\n            const value = this._getOptionValue(...args);\n\n            return isString(value) || isArray(value) ? { class: value } : value;\n        },\n        _getPT(pt, key = '', callback) {\n            const getValue = (value, checkSameKey = false) => {\n                const computedValue = callback ? callback(value) : value;\n                const _key = toFlatCase(key);\n                const _cKey = toFlatCase(this.$name);\n\n                return (checkSameKey ? (_key !== _cKey ? computedValue?.[_key] : undefined) : computedValue?.[_key]) ?? computedValue;\n            };\n\n            return pt?.hasOwnProperty('_usept')\n                ? {\n                      _usept: pt['_usept'],\n                      originalValue: getValue(pt.originalValue),\n                      value: getValue(pt.value)\n                  }\n                : getValue(pt, true);\n        },\n        _usePT(pt, callback, key, params) {\n            const fn = (value) => callback(value, key, params);\n\n            if (pt?.hasOwnProperty('_usept')) {\n                const { mergeSections = true, mergeProps: useMergeProps = false } = pt['_usept'] || this.$primevueConfig?.ptOptions || {};\n                const originalValue = fn(pt.originalValue);\n                const value = fn(pt.value);\n\n                if (originalValue === undefined && value === undefined) return undefined;\n                else if (isString(value)) return value;\n                else if (isString(originalValue)) return originalValue;\n\n                return mergeSections || (!mergeSections && value) ? (useMergeProps ? this._mergeProps(useMergeProps, originalValue, value) : { ...originalValue, ...value }) : value;\n            }\n\n            return fn(pt);\n        },\n        _useGlobalPT(callback, key, params) {\n            return this._usePT(this.globalPT, callback, key, params);\n        },\n        _useDefaultPT(callback, key, params) {\n            return this._usePT(this.defaultPT, callback, key, params);\n        },\n        ptm(key = '', params = {}) {\n            return this._getPTValue(this.pt, key, { ...this.$params, ...params });\n        },\n        ptmi(key = '', params = {}) {\n            // inheritAttrs:true\n            const attrs = mergeProps(this.$_attrsWithoutPT, this.ptm(key, params));\n\n            attrs?.hasOwnProperty('id') && (attrs.id ??= this.$id);\n\n            return attrs;\n        },\n        ptmo(obj = {}, key = '', params = {}) {\n            return this._getPTValue(obj, key, { instance: this, ...params }, false);\n        },\n        cx(key = '', params = {}) {\n            return !this.isUnstyled ? this._getOptionValue(this.$style.classes, key, { ...this.$params, ...params }) : undefined;\n        },\n        sx(key = '', when = true, params = {}) {\n            if (when) {\n                const self = this._getOptionValue(this.$style.inlineStyles, key, { ...this.$params, ...params });\n                const base = this._getOptionValue(BaseComponentStyle.inlineStyles, key, { ...this.$params, ...params });\n\n                return [base, self];\n            }\n\n            return undefined;\n        }\n    },\n    computed: {\n        globalPT() {\n            return this._getPT(this.$primevueConfig?.pt, undefined, (value) => resolve(value, { instance: this }));\n        },\n        defaultPT() {\n            return this._getPT(this.$primevueConfig?.pt, undefined, (value) => this._getOptionValue(value, this.$name, { ...this.$params }) || resolve(value, { ...this.$params }));\n        },\n        isUnstyled() {\n            return this.unstyled !== undefined ? this.unstyled : this.$primevueConfig?.unstyled;\n        },\n        $id() {\n            return this.$attrs.id || this.uid;\n        },\n        $inProps() {\n            const nodePropKeys = Object.keys(this.$.vnode?.props || {});\n\n            return Object.fromEntries(Object.entries(this.$props).filter(([k]) => nodePropKeys?.includes(k)));\n        },\n        $theme() {\n            return this.$primevueConfig?.theme;\n        },\n        $style() {\n            return { classes: undefined, inlineStyles: undefined, load: () => {}, loadCSS: () => {}, loadStyle: () => {}, ...(this._getHostInstance(this) || {}).$style, ...this.$options.style };\n        },\n        $styleOptions() {\n            return { nonce: this.$primevueConfig?.csp?.nonce };\n        },\n        $primevueConfig() {\n            return this.$primevue?.config;\n        },\n        $name() {\n            return this.$options.hostName || this.$.type.name;\n        },\n        $params() {\n            const parentInstance = this._getHostInstance(this) || this.$parent;\n\n            return {\n                instance: this,\n                props: this.$props,\n                state: this.$data,\n                attrs: this.$attrs,\n                parent: {\n                    instance: parentInstance,\n                    props: parentInstance?.$props,\n                    state: parentInstance?.$data,\n                    attrs: parentInstance?.$attrs\n                }\n            };\n        },\n        $_attrsPT() {\n            return Object.entries(this.$attrs || {})\n                .filter(([key]) => key?.startsWith('pt:'))\n                .reduce((result, [key, value]) => {\n                    const [, ...rest] = key.split(':');\n\n                    rest?.reduce((currentObj, nestedKey, index, array) => {\n                        !currentObj[nestedKey] && (currentObj[nestedKey] = index === array.length - 1 ? value : {});\n\n                        return currentObj[nestedKey];\n                    }, result);\n\n                    return result;\n                }, {});\n        },\n        $_attrsWithoutPT() {\n            return Object.entries(this.$attrs || {})\n                .filter(([key]) => !key?.startsWith('pt:'))\n                .reduce((acc, [key, value]) => {\n                    acc[key] = value;\n\n                    return acc;\n                }, {});\n        }\n    }\n};\n</script>\n"],"names":["BaseStyle","extend","name","props","pt","type","Object","undefined","ptOptions","unstyled","Boolean","dt","inject","$parentInstance","watch","isUnstyled","immediate","handler","newValue","ThemeService","off","_loadCoreStyles","_themeChangeListener","oldValue","_this","_themeScopedListener","_loadScopedThemeStyles","_unloadScopedThemeStyles","scopedStyleEl","rootEl","uid","$attrSelector","beforeCreate","_this$pt","_this$pt2","_this$pt3","_ref","_ref$onBeforeCreate","_this$$primevueConfig","_this$$primevue","_this$$primevue2","_this$$primevue3","_ref2","_ref2$onBeforeCreate","_usept","originalValue","$","value","hooks","call","_useptInConfig","$primevueConfig","originalValueInConfig","$primevue","config","valueInConfig","useAttrSelector","$attrs","id","replace","created","_hook","beforeMount","_this$$el","findSingle","isElement","$el","parentElement","concat","$pc","_objectSpread","attrSelector","$params","_loadStyles","mounted","beforeUpdate","updated","beforeUnmount","unmounted","_removeThemeListeners","methods","hookName","$options","hostName","selfHook","_usePT","_getPT","_getOptionValue","defaultHook","_useDefaultPT","_mergeProps","fn","_len","arguments","length","args","Array","_key2","isFunction","apply","mergeProps","_load","Base","isStyleNameLoaded","loadCSS","$styleOptions","_loadGlobalStyles","setLoadedStyleName","_loadThemeStyles","_this$$style","_this$$style2","$style","BaseComponentStyle","style","globalCSS","_useGlobalPT","isNotEmpty","load","_this$$style4","_this$$style5","$theme","Theme","_this$$style3","_this$$style3$getComm","_ref3","getCommonTheme","primitive","semantic","global","css","loadStyle","_this$$style6","_this$$style6$getComp","_this$$style7","_this$$style8","_ref4","getComponentTheme","_this$$style9","_this$$style9$getLaye","layerOrder","getLayerOrderThemeCSS","first","preset","_this$$style0","_this$$style0$getPres","_this$$style1","_ref5","getPresetTheme","scopedStyle","el","_this$scopedStyleEl","remove","callback","clearLoadedStyleNames","on","_getHostInstance","instance","_getPropValue","_this$_getHostInstanc","options","key","params","getKeyValue","_getPTValue","_this$$primevueConfig2","obj","searchInDefaultPT","searchOut","test","split","_ref6","_ref6$mergeSections","mergeSections","_ref6$mergeProps","useMergeProps","_getPTClassValue","self","_getPTSelf","datasets","_getPTDatasets","_len2","_key3","$name","$_attrsPT","_this$pt4","_this$pt5","datasetPrefix","isExtended","_defineProperty","toFlatCase","isString","isArray","_this2","getValue","_ref8","checkSameKey","computedValue","_key","_cKey","hasOwnProperty","_this$$primevueConfig3","_ref9","_ref9$mergeSections","_ref9$mergeProps","globalPT","defaultPT","ptm","ptmi","_attrs$id","attrs","$_attrsWithoutPT","$id","ptmo","cx","classes","sx","when","inlineStyles","base","computed","_this$$primevueConfig4","_this3","resolve","_this$$primevueConfig5","_this4","_this$$primevueConfig6","$inProps","_this$$$vnode","nodePropKeys","keys","vnode","fromEntries","entries","$props","filter","_ref0","_ref1","_slicedToArray","k","includes","_this$$primevueConfig7","theme","_this$$primevueConfig8","nonce","csp","_this$$primevue4","parentInstance","$parent","state","$data","parent","_ref10","_ref11","startsWith","reduce","result","_ref12","_ref13","_key$split","_key$split2","_toArray","rest","slice","currentObj","nestedKey","index","array","_ref14","_ref15","acc","_ref16","_ref17"],"mappings":"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"}