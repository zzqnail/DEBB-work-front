{"version":3,"file":"index.mjs","sources":["../../src/megamenu/BaseMegaMenu.vue","../../src/megamenu/MegaMenuSub.vue","../../src/megamenu/MegaMenuSub.vue?vue&type=template&id=5fbd7786&lang.js","../../src/megamenu/MegaMenu.vue","../../src/megamenu/MegaMenu.vue?vue&type=template&id=8c65d226&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MegaMenuStyle from 'primevue/megamenu/style';\n\nexport default {\n    name: 'BaseMegaMenu',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        orientation: {\n            type: String,\n            default: 'horizontal'\n        },\n        breakpoint: {\n            type: String,\n            default: '960px'\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        scrollHeight: {\n            type: String,\n            default: '20rem'\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: MegaMenuStyle,\n    provide() {\n        return {\n            $pcMegaMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <li v-if=\"submenu\" :class=\"[cx('submenuLabel', { submenu }), getItemProp(submenu, 'class')]\" :style=\"getItemProp(submenu, 'style')\" role=\"presentation\" v-bind=\"ptm('submenuLabel')\">{{ getItemLabel(submenu) }}</li>\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mouseenter=\"onItemMouseEnter($event, processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'itemContent')\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">\n                                {{ getItemLabel(processedItem) }}\n                            </span>\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                <component v-else :is=\"horizontal || mobileActive ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"isItemGroup(processedItem)\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <div v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\" :class=\"cx('overlay')\" v-bind=\"ptm('overlay')\">\n                    <div :class=\"cx('grid')\" v-bind=\"ptm('grid')\">\n                        <div v-for=\"col of processedItem.items\" :key=\"getItemKey(col)\" :class=\"cx('column', { processedItem })\" v-bind=\"ptm('column')\">\n                            <MegaMenuSub\n                                v-for=\"submenu of col\"\n                                :key=\"getSubListKey(submenu)\"\n                                :id=\"getSubListId(submenu)\"\n                                :style=\"sx('submenu', true, { processedItem })\"\n                                role=\"menu\"\n                                :menuId=\"menuId\"\n                                :focusedItemId=\"focusedItemId\"\n                                :submenu=\"submenu\"\n                                :items=\"submenu.items\"\n                                :templates=\"templates\"\n                                :level=\"level + 1\"\n                                :mobileActive=\"mobileActive\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                                @item-click=\"$emit('item-click', $event)\"\n                                @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MegaMenuSub',\n    hostName: 'MegaMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter'],\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        horizontal: {\n            type: Boolean,\n            default: false\n        },\n        submenu: {\n            type: Object,\n            default: null\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItem: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getSubListId(processedItem) {\n            return `${this.getItemId(processedItem)}_list`;\n        },\n        getSubListKey(processedItem) {\n            return this.getSubListId(processedItem);\n        },\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('label')\n                    },\n                    this.getPTOptions(processedItem, index, 'label')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <li v-if=\"submenu\" :class=\"[cx('submenuLabel', { submenu }), getItemProp(submenu, 'class')]\" :style=\"getItemProp(submenu, 'style')\" role=\"presentation\" v-bind=\"ptm('submenuLabel')\">{{ getItemLabel(submenu) }}</li>\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mouseenter=\"onItemMouseEnter($event, processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'itemContent')\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">\n                                {{ getItemLabel(processedItem) }}\n                            </span>\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                <component v-else :is=\"horizontal || mobileActive ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"isItemGroup(processedItem)\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <div v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\" :class=\"cx('overlay')\" v-bind=\"ptm('overlay')\">\n                    <div :class=\"cx('grid')\" v-bind=\"ptm('grid')\">\n                        <div v-for=\"col of processedItem.items\" :key=\"getItemKey(col)\" :class=\"cx('column', { processedItem })\" v-bind=\"ptm('column')\">\n                            <MegaMenuSub\n                                v-for=\"submenu of col\"\n                                :key=\"getSubListKey(submenu)\"\n                                :id=\"getSubListId(submenu)\"\n                                :style=\"sx('submenu', true, { processedItem })\"\n                                role=\"menu\"\n                                :menuId=\"menuId\"\n                                :focusedItemId=\"focusedItemId\"\n                                :submenu=\"submenu\"\n                                :items=\"submenu.items\"\n                                :templates=\"templates\"\n                                :level=\"level + 1\"\n                                :mobileActive=\"mobileActive\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                                @item-click=\"$emit('item-click', $event)\"\n                                @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MegaMenuSub',\n    hostName: 'MegaMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter'],\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        horizontal: {\n            type: Boolean,\n            default: false\n        },\n        submenu: {\n            type: Object,\n            default: null\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItem: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getSubListId(processedItem) {\n            return `${this.getItemId(processedItem)}_list`;\n        },\n        getSubListKey(processedItem) {\n            return this.getSubListId(processedItem);\n        },\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('label')\n                    },\n                    this.getPTOptions(processedItem, index, 'label')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <div :ref=\"containerRef\" :id=\"$id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <!--TODO: menubutton deprecated since v4.0. Use button-->\n        <slot :id=\"$id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"$id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"ptm('button')\"\n            >\n                <!--TODO: menubuttonicon deprecated since v4.0. Use buttonicon-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonIcon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MegaMenuSub\n            :ref=\"menubarRef\"\n            :id=\"$id + '_list'\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"menubar\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-disabled=\"disabled || undefined\"\n            :aria-orientation=\"orientation\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"$id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :items=\"processedItems\"\n            :horizontal=\"horizontal\"\n            :templates=\"$slots\"\n            :activeItem=\"activeItem\"\n            :mobileActive=\"mobileActive\"\n            :level=\"0\"\n            :style=\"sx('rootList')\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMegaMenu from './BaseMegaMenu.vue';\nimport MegaMenuSub from './MegaMenuSub.vue';\n\nexport default {\n    name: 'MegaMenu',\n    extends: BaseMegaMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    outsideClickListener: null,\n    resizeListener: null,\n    matchMediaListener: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, key: '', parentKey: '' },\n            activeItem: null,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        activeItem(newItem) {\n            if (isNotEmpty(newItem)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndex.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndex.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            this.focusedItemInfo = { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    focus(this.$refs.menubutton, { preventScroll: true });\n                }, 1);\n            }\n\n            this.activeItem = null;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n\n            isFocus && focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (this.focusedItemInfo.index === -1) {\n                const index = this.findFirstFocusedItemIndex();\n                const processedItem = this.findVisibleItem(index);\n\n                this.focusedItemInfo = { index, key: processedItem.key, parentKey: processedItem.parentKey };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            grouped && (this.activeItem = processedItem);\n            this.focusedItemInfo = { index, key, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, parentKey } = processedItem;\n\n                this.activeItem = null;\n                this.focusedItemInfo = { index, key, parentKey };\n\n                this.dirty = !root;\n\n                if (!this.mobileActive) {\n                    focus(this.menubar, { preventScroll: true });\n                }\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    this.hide(originalEvent);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (!this.mobileActive && this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            if (this.horizontal) {\n                if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {\n                    this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                } else {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (grouped) {\n                        this.onItemChange({ originalEvent: event, processedItem });\n                        this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                        this.searchValue = '';\n                    }\n                }\n            }\n\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemInfo(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.horizontal) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (!grouped && isNotEmpty(this.activeItem)) {\n                        if (this.focusedItemInfo.index === 0) {\n                            this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                            this.activeItem = null;\n                        } else {\n                            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n                        }\n                    }\n                }\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.horizontal) {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemInfo(event, itemIndex);\n                }\n            } else {\n                if (this.vertical && isNotEmpty(this.activeItem)) {\n                    if (processedItem.columnIndex === 0) {\n                        this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                        this.activeItem = null;\n                    }\n                }\n\n                const columnIndex = processedItem.columnIndex - 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.vertical) {\n                    if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {\n                        this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                    } else {\n                        const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                        const grouped = this.isProccessedItemGroup(processedItem);\n\n                        if (grouped) {\n                            this.onItemChange({ originalEvent: event, processedItem });\n                            this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                            this.searchValue = '';\n                        }\n                    }\n                }\n\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n            } else {\n                const columnIndex = processedItem.columnIndex + 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemInfo(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.changeFocusedItemInfo(event, this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (isNotEmpty(this.activeItem)) {\n                this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key };\n                this.activeItem = null;\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener, true);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener, true);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        findVisibleItem(index) {\n            return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemInfo(event, index) {\n            const processedItem = this.findVisibleItem(index);\n\n            this.focusedItemInfo.index = index;\n            this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : '';\n            this.scrollInView();\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.$id}_${index}` : this.focusedItemId;\n            let element;\n\n            if (id === null && this.queryMatches) {\n                element = this.$refs.menubutton;\n            } else {\n                element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n            }\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '', columnIndex) {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + (columnIndex !== undefined ? columnIndex + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey,\n                        columnIndex: columnIndex !== undefined ? columnIndex : parent.columnIndex !== undefined ? parent.columnIndex : index\n                    };\n\n                    newItem['items'] =\n                        level === 0 && item.items && item.items.length > 0 ? item.items.map((_items, _index) => this.createProcessedItems(_items, level + 1, newItem, key, _index)) : this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;\n\n            return processedItem && processedItem.key === this.focusedItemInfo.parentKey\n                ? processedItem.items.reduce((items, col) => {\n                      col.forEach((submenu) => {\n                          submenu.items.forEach((a) => {\n                              items.push(a);\n                          });\n                      });\n\n                      return items;\n                  }, [])\n                : this.processedItems;\n        },\n        horizontal() {\n            return this.orientation === 'horizontal';\n        },\n        vertical() {\n            return this.orientation === 'vertical';\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItemInfo.key) ? `${this.$id}_${this.focusedItemInfo.key}` : null;\n        }\n    },\n    components: {\n        MegaMenuSub: MegaMenuSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n","<template>\n    <div :ref=\"containerRef\" :id=\"$id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <!--TODO: menubutton deprecated since v4.0. Use button-->\n        <slot :id=\"$id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"$id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"ptm('button')\"\n            >\n                <!--TODO: menubuttonicon deprecated since v4.0. Use buttonicon-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonIcon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MegaMenuSub\n            :ref=\"menubarRef\"\n            :id=\"$id + '_list'\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"menubar\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-disabled=\"disabled || undefined\"\n            :aria-orientation=\"orientation\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"$id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :items=\"processedItems\"\n            :horizontal=\"horizontal\"\n            :templates=\"$slots\"\n            :activeItem=\"activeItem\"\n            :mobileActive=\"mobileActive\"\n            :level=\"0\"\n            :style=\"sx('rootList')\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMegaMenu from './BaseMegaMenu.vue';\nimport MegaMenuSub from './MegaMenuSub.vue';\n\nexport default {\n    name: 'MegaMenu',\n    extends: BaseMegaMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    outsideClickListener: null,\n    resizeListener: null,\n    matchMediaListener: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, key: '', parentKey: '' },\n            activeItem: null,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        activeItem(newItem) {\n            if (isNotEmpty(newItem)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndex.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndex.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            this.focusedItemInfo = { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    focus(this.$refs.menubutton, { preventScroll: true });\n                }, 1);\n            }\n\n            this.activeItem = null;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n\n            isFocus && focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (this.focusedItemInfo.index === -1) {\n                const index = this.findFirstFocusedItemIndex();\n                const processedItem = this.findVisibleItem(index);\n\n                this.focusedItemInfo = { index, key: processedItem.key, parentKey: processedItem.parentKey };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            grouped && (this.activeItem = processedItem);\n            this.focusedItemInfo = { index, key, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, parentKey } = processedItem;\n\n                this.activeItem = null;\n                this.focusedItemInfo = { index, key, parentKey };\n\n                this.dirty = !root;\n\n                if (!this.mobileActive) {\n                    focus(this.menubar, { preventScroll: true });\n                }\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    this.hide(originalEvent);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (!this.mobileActive && this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            if (this.horizontal) {\n                if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {\n                    this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                } else {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (grouped) {\n                        this.onItemChange({ originalEvent: event, processedItem });\n                        this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                        this.searchValue = '';\n                    }\n                }\n            }\n\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemInfo(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.horizontal) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (!grouped && isNotEmpty(this.activeItem)) {\n                        if (this.focusedItemInfo.index === 0) {\n                            this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                            this.activeItem = null;\n                        } else {\n                            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n                        }\n                    }\n                }\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.horizontal) {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemInfo(event, itemIndex);\n                }\n            } else {\n                if (this.vertical && isNotEmpty(this.activeItem)) {\n                    if (processedItem.columnIndex === 0) {\n                        this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                        this.activeItem = null;\n                    }\n                }\n\n                const columnIndex = processedItem.columnIndex - 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.vertical) {\n                    if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {\n                        this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                    } else {\n                        const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                        const grouped = this.isProccessedItemGroup(processedItem);\n\n                        if (grouped) {\n                            this.onItemChange({ originalEvent: event, processedItem });\n                            this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                            this.searchValue = '';\n                        }\n                    }\n                }\n\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n            } else {\n                const columnIndex = processedItem.columnIndex + 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemInfo(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.changeFocusedItemInfo(event, this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (isNotEmpty(this.activeItem)) {\n                this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key };\n                this.activeItem = null;\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener, true);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener, true);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        findVisibleItem(index) {\n            return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemInfo(event, index) {\n            const processedItem = this.findVisibleItem(index);\n\n            this.focusedItemInfo.index = index;\n            this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : '';\n            this.scrollInView();\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.$id}_${index}` : this.focusedItemId;\n            let element;\n\n            if (id === null && this.queryMatches) {\n                element = this.$refs.menubutton;\n            } else {\n                element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n            }\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '', columnIndex) {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + (columnIndex !== undefined ? columnIndex + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey,\n                        columnIndex: columnIndex !== undefined ? columnIndex : parent.columnIndex !== undefined ? parent.columnIndex : index\n                    };\n\n                    newItem['items'] =\n                        level === 0 && item.items && item.items.length > 0 ? item.items.map((_items, _index) => this.createProcessedItems(_items, level + 1, newItem, key, _index)) : this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;\n\n            return processedItem && processedItem.key === this.focusedItemInfo.parentKey\n                ? processedItem.items.reduce((items, col) => {\n                      col.forEach((submenu) => {\n                          submenu.items.forEach((a) => {\n                              items.push(a);\n                          });\n                      });\n\n                      return items;\n                  }, [])\n                : this.processedItems;\n        },\n        horizontal() {\n            return this.orientation === 'horizontal';\n        },\n        vertical() {\n            return this.orientation === 'vertical';\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItemInfo.key) ? `${this.$id}_${this.focusedItemInfo.key}` : null;\n        }\n    },\n    components: {\n        MegaMenuSub: MegaMenuSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","model","type","Array","orientation","String","breakpoint","disabled","Boolean","tabindex","Number","scrollHeight","ariaLabelledby","ariaLabel","style","MegaMenuStyle","provide","$pcMegaMenu","$parentInstance","hostName","emits","menuId","focusedItemId","horizontal","submenu","Object","mobileActive","items","level","templates","activeItem","methods","getSubListId","processedItem","concat","getItemId","getSubListKey","key","getItemKey","getItemProp","params","item","resolve","undefined","getItemLabel","getPTOptions","index","ptm","context","active","isItemActive","focused","isItemFocused","isItemDisabled","isNotEmpty","isItemVisible","isItemGroup","onItemClick","event","originalEvent","$emit","isFocus","onItemMouseEnter","getAriaSetSize","_this","filter","length","getAriaPosInset","_this2","slice","getMenuItemProps","action","mergeProps","cx","icon","label","submenuicon","components","AngleRightIcon","AngleDownIcon","directives","ripple","Ripple","_openBlock","_createElementBlock","_mergeProps","$props","_ctx","$options","role","_toDisplayString","_Fragment","_renderList","id","_createElementVNode","onClick","$event","onMouseenter","_withDirectives","href","target","itemicon","_createBlock","_resolveDynamicComponent","hasSubmenu","col","_component_MegaMenuSub","_normalizeStyle","sx","pt","unstyled","_cache","onItemMouseenter","_hoisted_5","BaseMegaMenu","inheritAttrs","outsideClickListener","resizeListener","matchMediaListener","container","menubar","searchTimeout","searchValue","data","focusedItemInfo","parentKey","dirty","query","queryMatches","watch","newItem","bindOutsideClickListener","bindResizeListener","unbindOutsideClickListener","unbindResizeListener","mounted","bindMatchMediaListener","beforeUnmount","unbindMatchMediaListener","isItemSeparator","getProccessedItemLabel","isProccessedItemGroup","toggle","ZIndex","clear","hide","set","$primevue","config","zIndex","menu","setTimeout","show","preventDefault","findFirstFocusedItemIndex","focus","$refs","menubutton","preventScroll","onFocus","findVisibleItem","onBlur","onKeyDown","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","isPrintableCharacter","searchItems","onItemChange","isEmpty","grouped","root","parent","selected","isSelected","menuButtonClick","menuButtonKeydown","itemIndex","findNextItemIndex","changeFocusedItemInfo","altKey","findFirstItemIndex","findPrevItemIndex","findLastFocusedItemIndex","vertical","columnIndex","visibleItems","findIndex","findLastItemIndex","element","findSingle","anchorElement","click","_this3","isOutsideContainer","contains","isOutsideTarget","document","addEventListener","removeEventListener","_this4","isTouchDevice","window","_this5","matchMedia","matches","isItemMatched","_this$getProccessedIt","isValidItem","toLocaleLowerCase","startsWith","isValidSelectedItem","_this6","_this7","findLastIndex","_this8","matchedItemIndex","_this9","findSelectedItemIndex","_this0","selectedIndex","char","_this1","matched","clearTimeout","scrollInView","$id","scrollIntoView","block","inline","behavior","createProcessedItems","_this10","arguments","processedItems","forEach","map","_items","_index","push","containerRef","el","menubarRef","$el","computed","reduce","a","MegaMenuSub","BarsIcon","ref","ptmi","$slots","start","_renderSlot","button","toggleCallback","_ctx$$primevue$config","$data","locale","aria","navigation","onKeydown","buttonicon","_createVNode","_component_BarsIcon","end"],"mappings":"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"}