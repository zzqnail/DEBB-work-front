{"version":3,"file":"index.mjs","sources":["../../src/dynamicdialog/BaseDynamicDialog.vue","../../src/dynamicdialog/DynamicDialog.vue","../../src/dynamicdialog/DynamicDialog.vue?vue&type=template&id=4e9ba053&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DynamicDialogStyle from 'primevue/dynamicdialog/style';\n\nexport default {\n    name: 'BaseDynamicDialog',\n    extends: BaseComponent,\n    props: {},\n    style: DynamicDialogStyle,\n    provide() {\n        return {\n            $pcDynamicDialog: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <template v-for=\"(instance, key) in instanceMap\" :key=\"key\">\n        <DDialog v-model:visible=\"instance.visible\" :_instance=\"instance\" v-bind=\"instance.options.props\" @hide=\"onDialogHide(instance)\" @after-hide=\"onDialogAfterHide(instance)\">\n            <template v-if=\"instance.options.templates && instance.options.templates.header\" #header>\n                <component v-for=\"(header, index) in getTemplateItems(instance.options.templates.header)\" :is=\"header\" :key=\"index + '_header'\" v-bind=\"instance.options.emits\"></component>\n            </template>\n            <component :is=\"instance.content\" v-bind=\"instance.options.emits\"></component>\n            <template v-if=\"instance.options.templates && instance.options.templates.footer\" #footer>\n                <component v-for=\"(footer, index) in getTemplateItems(instance.options.templates.footer)\" :is=\"footer\" :key=\"index + '_footer'\" v-bind=\"instance.options.emits\"></component>\n            </template>\n        </DDialog>\n    </template>\n</template>\n\n<script>\nimport { uuid } from '@primeuix/utils';\nimport Dialog from 'primevue/dialog';\nimport DynamicDialogEventBus from 'primevue/dynamicdialogeventbus';\nimport BaseDynamicDialog from './BaseDynamicDialog.vue';\n\nexport default {\n    name: 'DynamicDialog',\n    extends: BaseDynamicDialog,\n    inheritAttrs: false,\n    data() {\n        return {\n            instanceMap: {}\n        };\n    },\n    openListener: null,\n    closeListener: null,\n    currentInstance: null,\n    mounted() {\n        this.openListener = ({ instance }) => {\n            const key = uuid() + '_dynamic_dialog';\n\n            instance.visible = true;\n            instance.key = key;\n            this.instanceMap[key] = instance;\n        };\n\n        this.closeListener = ({ instance, params }) => {\n            const key = instance.key;\n            const currentInstance = this.instanceMap[key];\n\n            if (currentInstance) {\n                currentInstance.visible = false;\n                currentInstance.options.onClose && currentInstance.options.onClose({ data: params, type: 'config-close' });\n\n                this.currentInstance = currentInstance;\n            }\n        };\n\n        DynamicDialogEventBus.on('open', this.openListener);\n        DynamicDialogEventBus.on('close', this.closeListener);\n    },\n    beforeUnmount() {\n        DynamicDialogEventBus.off('open', this.openListener);\n        DynamicDialogEventBus.off('close', this.closeListener);\n    },\n    methods: {\n        onDialogHide(instance) {\n            !this.currentInstance && instance.options.onClose && instance.options.onClose({ type: 'dialog-close' });\n        },\n        onDialogAfterHide(instance) {\n            this.currentInstance && delete this.currentInstance;\n            this.currentInstance = null;\n            delete this.instanceMap[instance.key];\n        },\n        getTemplateItems(template) {\n            return Array.isArray(template) ? template : [template];\n        }\n    },\n    components: {\n        DDialog: Dialog\n    }\n};\n</script>\n","<template>\n    <template v-for=\"(instance, key) in instanceMap\" :key=\"key\">\n        <DDialog v-model:visible=\"instance.visible\" :_instance=\"instance\" v-bind=\"instance.options.props\" @hide=\"onDialogHide(instance)\" @after-hide=\"onDialogAfterHide(instance)\">\n            <template v-if=\"instance.options.templates && instance.options.templates.header\" #header>\n                <component v-for=\"(header, index) in getTemplateItems(instance.options.templates.header)\" :is=\"header\" :key=\"index + '_header'\" v-bind=\"instance.options.emits\"></component>\n            </template>\n            <component :is=\"instance.content\" v-bind=\"instance.options.emits\"></component>\n            <template v-if=\"instance.options.templates && instance.options.templates.footer\" #footer>\n                <component v-for=\"(footer, index) in getTemplateItems(instance.options.templates.footer)\" :is=\"footer\" :key=\"index + '_footer'\" v-bind=\"instance.options.emits\"></component>\n            </template>\n        </DDialog>\n    </template>\n</template>\n\n<script>\nimport { uuid } from '@primeuix/utils';\nimport Dialog from 'primevue/dialog';\nimport DynamicDialogEventBus from 'primevue/dynamicdialogeventbus';\nimport BaseDynamicDialog from './BaseDynamicDialog.vue';\n\nexport default {\n    name: 'DynamicDialog',\n    extends: BaseDynamicDialog,\n    inheritAttrs: false,\n    data() {\n        return {\n            instanceMap: {}\n        };\n    },\n    openListener: null,\n    closeListener: null,\n    currentInstance: null,\n    mounted() {\n        this.openListener = ({ instance }) => {\n            const key = uuid() + '_dynamic_dialog';\n\n            instance.visible = true;\n            instance.key = key;\n            this.instanceMap[key] = instance;\n        };\n\n        this.closeListener = ({ instance, params }) => {\n            const key = instance.key;\n            const currentInstance = this.instanceMap[key];\n\n            if (currentInstance) {\n                currentInstance.visible = false;\n                currentInstance.options.onClose && currentInstance.options.onClose({ data: params, type: 'config-close' });\n\n                this.currentInstance = currentInstance;\n            }\n        };\n\n        DynamicDialogEventBus.on('open', this.openListener);\n        DynamicDialogEventBus.on('close', this.closeListener);\n    },\n    beforeUnmount() {\n        DynamicDialogEventBus.off('open', this.openListener);\n        DynamicDialogEventBus.off('close', this.closeListener);\n    },\n    methods: {\n        onDialogHide(instance) {\n            !this.currentInstance && instance.options.onClose && instance.options.onClose({ type: 'dialog-close' });\n        },\n        onDialogAfterHide(instance) {\n            this.currentInstance && delete this.currentInstance;\n            this.currentInstance = null;\n            delete this.instanceMap[instance.key];\n        },\n        getTemplateItems(template) {\n            return Array.isArray(template) ? template : [template];\n        }\n    },\n    components: {\n        DDialog: Dialog\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","style","DynamicDialogStyle","provide","$pcDynamicDialog","$parentInstance","BaseDynamicDialog","inheritAttrs","data","instanceMap","openListener","closeListener","currentInstance","mounted","_this","_ref","instance","key","uuid","visible","_ref2","params","options","onClose","type","DynamicDialogEventBus","on","beforeUnmount","off","methods","onDialogHide","onDialogAfterHide","getTemplateItems","template","Array","isArray","components","DDialog","Dialog","_openBlock","_createElementBlock","_Fragment","_renderList","$data","_createBlock","_component_DDialog","_mergeProps","onUpdateVisible","$event","_instance","onHide","$options","onAfterHide","_resolveDynamicComponent","content","ref_for","emits","templates","header","index","footer"],"mappings":"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"}