{"version":3,"sources":["../../../src/presets/material/autocomplete/index.ts"],"sourcesContent":["import type { AutoCompleteDesignTokens, AutoCompleteTokenSections } from '@primeuix/themes/types/autocomplete';\n\nexport const root: AutoCompleteTokenSections.Root = {\n    background: '{form.field.background}',\n    disabledBackground: '{form.field.disabled.background}',\n    filledBackground: '{form.field.filled.background}',\n    filledHoverBackground: '{form.field.filled.hover.background}',\n    filledFocusBackground: '{form.field.filled.focus.background}',\n    borderColor: '{form.field.border.color}',\n    hoverBorderColor: '{form.field.hover.border.color}',\n    focusBorderColor: '{form.field.focus.border.color}',\n    invalidBorderColor: '{form.field.invalid.border.color}',\n    color: '{form.field.color}',\n    disabledColor: '{form.field.disabled.color}',\n    placeholderColor: '{form.field.placeholder.color}',\n    shadow: '{form.field.shadow}',\n    paddingX: '{form.field.padding.x}',\n    paddingY: '{form.field.padding.y}',\n    borderRadius: '{form.field.border.radius}',\n    focusRing: {\n        width: '{form.field.focus.ring.width}',\n        style: '{form.field.focus.ring.style}',\n        color: '{form.field.focus.ring.color}',\n        offset: '{form.field.focus.ring.offset}',\n        shadow: '{form.field.focus.ring.shadow}'\n    },\n    transitionDuration: '{form.field.transition.duration}'\n};\n\nexport const overlay: AutoCompleteTokenSections.Overlay = {\n    background: '{overlay.select.background}',\n    borderColor: '{overlay.select.border.color}',\n    borderRadius: '{overlay.select.border.radius}',\n    color: '{overlay.select.color}',\n    shadow: '{overlay.select.shadow}'\n};\n\nexport const list: AutoCompleteTokenSections.List = {\n    padding: '{list.padding}',\n    gap: '{list.gap}'\n};\n\nexport const option: AutoCompleteTokenSections.Option = {\n    focusBackground: '{list.option.focus.background}',\n    selectedBackground: '{list.option.selected.background}',\n    selectedFocusBackground: '{list.option.selected.focus.background}',\n    color: '{list.option.color}',\n    focusColor: '{list.option.focus.color}',\n    selectedColor: '{list.option.selected.color}',\n    selectedFocusColor: '{list.option.selected.focus.color}',\n    padding: '{list.option.padding}',\n    borderRadius: '{list.option.border.radius}'\n};\n\nexport const optionGroup: AutoCompleteTokenSections.OptionGroup = {\n    background: '{list.option.group.background}',\n    color: '{list.option.group.color}',\n    fontWeight: '{list.option.group.font.weight}',\n    padding: '{list.option.group.padding}'\n};\n\nexport const dropdown: AutoCompleteTokenSections.Dropdown = {\n    width: '3rem',\n    sm: {\n        width: '2.5rem'\n    },\n    lg: {\n        width: '3.5rem'\n    },\n    borderColor: '{form.field.border.color}',\n    hoverBorderColor: '{form.field.border.color}',\n    activeBorderColor: '{form.field.border.color}',\n    borderRadius: '{form.field.border.radius}',\n    focusRing: {\n        width: '0',\n        style: 'none',\n        color: 'unset',\n        offset: '0',\n        shadow: 'none'\n    }\n};\n\nexport const chip: AutoCompleteTokenSections.Chip = {\n    borderRadius: '{border.radius.sm}'\n};\n\nexport const emptyMessage: AutoCompleteTokenSections.EmptyMessage = {\n    padding: '{list.option.padding}'\n};\n\nexport const colorScheme: AutoCompleteTokenSections.ColorScheme = {\n    light: {\n        chip: {\n            focusBackground: '{surface.300}',\n            focusColor: '{surface.950}'\n        },\n        dropdown: {\n            background: '{surface.100}',\n            hoverBackground: '{surface.200}',\n            activeBackground: '{surface.300}',\n            color: '{surface.600}',\n            hoverColor: '{surface.700}',\n            activeColor: '{surface.800}'\n        }\n    },\n    dark: {\n        chip: {\n            focusBackground: '{surface.600}',\n            focusColor: '{surface.0}'\n        },\n        dropdown: {\n            background: '{surface.800}',\n            hoverBackground: '{surface.700}',\n            activeBackground: '{surface.600}',\n            color: '{surface.300}',\n            hoverColor: '{surface.200}',\n            activeColor: '{surface.100}'\n        }\n    }\n};\n\nexport const css: AutoCompleteTokenSections.CSS = /*css*/ `\n.p-autocomplete-dropdown:focus-visible {\n    background: dt('autocomplete.dropdown.hover.background');\n    border-color: dt('autocomplete.dropdown.hover.border.color');\n    color: dt('autocomplete.dropdown.hover.color');\n}\n\n.p-variant-filled.p-autocomplete-input-multiple {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    border: 1px solid transparent;\n    background: dt('autocomplete.filled.background') no-repeat;\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));\n    background-size: 0 2px, 100% 1px;\n    background-position: 50% 100%, 50% 100%;\n    background-origin: border-box;\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\n}\n\n.p-autocomplete:not(.p-disabled):hover .p-variant-filled.p-autocomplete-input-multiple {\n    background: dt('autocomplete.filled.hover.background') no-repeat;\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));\n    background-size: 0 2px, 100% 1px;\n    background-position: 50% 100%, 50% 100%;\n    background-origin: border-box;\n    border-color: transparent;\n}\n\n.p-autocomplete:not(.p-disabled).p-focus .p-variant-filled.p-autocomplete-input-multiple {\n    outline: 0 none;\n    background: dt('autocomplete.filled.focus.background') no-repeat;\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));\n    background-size: 100% 2px, 100% 1px;\n    background-position: 50% 100%, 50% 100%;\n    background-origin: border-box;\n    border-color: transparent;\n}\n\n.p-autocomplete:not(.p-disabled).p-focus:hover .p-variant-filled.p-autocomplete-input-multiple {\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));\n}\n\n.p-autocomplete.p-invalid .p-autocomplete-input-multiple {\n    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));\n}\n\n.p-autocomplete.p-invalid.p-focus .p-autocomplete-input-multiple  {\n    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));\n}\n\n.p-autocomplete-option {\n    transition: none;\n}\n`;\n\nexport default {\n    root,\n    overlay,\n    list,\n    option,\n    optionGroup,\n    dropdown,\n    chip,\n    emptyMessage,\n    colorScheme,\n    css\n} satisfies AutoCompleteDesignTokens;\n"],"mappings":"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","names":[]}